name: Run all unit tests
on:
  workflow_dispatch:
    inputs:
      source-ref:
        description: "Specify source-ref/tag/hash"
        required: true
        default: 'main'
      apm-repo:
        description: 'The repo of APM source code to use'
        required: true
        default: 'newrelic/newrelic-java-agent'
      apm-source-ref:
        description: 'The source-ref of APM source code to use'
        required: true
        default: 'k2-integration'
      slack-notify:
        description: 'Whether to notify build status on slack'
        required: true
        default: true
      description:
        description: "A description for the custom jar that will be generated. It will appear in the summary."
        required: true
        default: ''
  workflow_call:
    inputs:
      source-ref:
        description: "Specify source-ref/tag/hash"
        required: true
        type: string
        default: 'main'
      apm-repo:
        description: 'The repo of APM source code to use'
        required: true
        type: string
        default: 'newrelic/newrelic-java-agent'
      apm-source-ref:
        description: 'The source-ref of APM source code to use'
        required: true
        type: string
        default: 'k2-integration'
      slack-notify:
        description: 'Whether to notify build status on slack'
        required: true
        type: string
        default: true
      description:
        description: "A description for the custom jar that will be generated. It will appear in the summary."
        required: true
        type: string
        default: ''

jobs:
  create_integrated_jar:
    name: Create Integrated Agent jar
    runs-on: ubuntu-20.04
    steps:
      - name: Print Inputs
        run: echo "${{ toJSON(github.event.inputs) }}"

      - name: Checkout CSEC Java agent
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.source-ref }}

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          apm-repo: ${{ inputs.apm-repo }}
          apm-branch: ${{ inputs.apm-source-ref }}
          apm-aws-access-key-id: ${{ secrets.APM_AWS_ACCESS_KEY_ID }}
          apm-aws-secret-access-key: ${{ secrets.APM_AWS_SECRET_ACCESS_KEY }}
          apm-aws-region: us-east-2

      - name: Check version compatibility
        shell: bash
        run: |
          APM_CONFIGURED_CSEC_VERSION=$(./gradlew ${GRADLE_OPTIONS} -p newrelic-java-agent/ properties | grep 'csecCollectorVersion:' | awk -F': ' '{print $2}')
          CSEC_CONFIGURED_APM_VERSION=$(./gradlew ${GRADLE_OPTIONS} properties | grep 'nrAPIVersion:' | awk -F': ' '{print $2}')
          
          if [[ "${APM_VERSION}" != "${CSEC_CONFIGURED_APM_VERSION}" ]]
          then
            printf "${RED}Version mismatch regarding APM: ${NONE}\n"
            printf "${RED}Version of APM to build: ${APM_VERSION} ${NONE}\n"
            printf "${RED}Version of APM API used by CSEC: ${CSEC_CONFIGURED_APM_VERSION} ${NONE}\n"
            exit 1
          fi
          
          if [[ "${SECURITY_VERSION}" != "${APM_CONFIGURED_CSEC_VERSION}" ]]
          then
            printf "${RED}Version mismatch regarding Security: ${NONE}\n"
            printf "${RED}Version of CSEC to build: ${SECURITY_VERSION} ${NONE}\n"
            printf "${RED}Version of CSEC API used by APM: ${APM_CONFIGURED_CSEC_VERSION} ${NONE}\n"
            exit 2
          fi

      - name: Publish CSEC to local
        uses: ./.github/actions/publish-csec-local

      - name: Run CSEC unit tests
        if: ${{ inputs.csec-run-unittest == 'true' }}
        uses: ./.github/actions/unit-test

      - name: Send slack notification
        uses: slackapi/slack-github-action@v1.23.0
        if: ${{ inputs.slack-notify == 'true' }}
        with:
          payload: |
            { 
              "task": "Integrated jar build",
              "job-ref": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
              "build-number": "${{ github.run_id }}-${{ github.run_number }}",
              "apm-full-ref": "${{ github.server_url }}/${{ inputs.apm-repo }}/tree/${{ inputs.apm-source-ref }}",
              "apm-source-ref": "${{ inputs.apm-source-ref }}",
              "apm-version": "${{ env.APM_VERSION }}",
              "security-full-ref": "${{ github.server_url }}/${{ github.repository }}/tree/${{ inputs.source-ref }}",
              "security-source-ref": "${{ inputs.source-ref }}",
              "security-version": "${{ env.SECURITY_VERSION }}",
              "security-json-version": "${{ env.SECURITY_JSON_VERSION }}",
              "changelog-url": "${{ github.server_url }}/${{ github.repository }}/blob/${{ inputs.source-ref }}/Changelog.md",
              "custom-message": "${{ inputs.description }}",
              "artifact-download-link": "https://nr-java-sec-agent.s3.us-west-2.amazonaws.com/integrated-builds/${{ github.run_id }}-${{ github.run_number }}/newrelic.zip"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
